// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PawRace.DataAccess.Models;

public partial class PawRaceDbContext : DbContext
{
    public PawRaceDbContext(DbContextOptions<PawRaceDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Dog> Dogs { get; set; }

    public virtual DbSet<Race> Races { get; set; }

    public virtual DbSet<RaceDog> RaceDogs { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<TicketDetail> TicketDetails { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Dog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Dog__3214EC07F19A6B7F");

            entity.ToTable("Dog");

            entity.Property(e => e.Breed).HasMaxLength(100);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Race>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Race__3214EC076FB9F7CE");

            entity.ToTable("Race");

            entity.Property(e => e.FinishedAt).HasColumnType("datetime");
            entity.Property(e => e.ScheduledAt).HasColumnType("datetime");
            entity.Property(e => e.StartedAt).HasColumnType("datetime");
        });

        modelBuilder.Entity<RaceDog>(entity =>
        {
            entity.HasKey(e => new { e.RaceId, e.DogId });

            entity.ToTable("RaceDog");

            entity.Property(e => e.IsAvailable).HasDefaultValue(false);
            entity.Property(e => e.IsWinner).HasDefaultValue(false);
            entity.Property(e => e.Odds).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.Dog).WithMany(p => p.RaceDogs)
                .HasForeignKey(d => d.DogId)
                .HasConstraintName("FK_RaceDog_Dog");

            entity.HasOne(d => d.Race).WithMany(p => p.RaceDogs)
                .HasForeignKey(d => d.RaceId)
                .HasConstraintName("FK_RaceDog_Race");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Ticket__3214EC07B7C621D4");

            entity.ToTable("Ticket");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PotentialWinning).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.StatusId).HasDefaultValue((byte)1);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.User).WithMany(p => p.Tickets)
                .HasPrincipalKey(p => p.Guidid)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Ticket__UserId__0F624AF8");
        });

        modelBuilder.Entity<TicketDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TicketDe__3214EC27F40A1768");

            entity.Property(e => e.Id).HasColumnName("ID");

            entity.HasOne(d => d.Dog).WithMany(p => p.TicketDetails)
                .HasForeignKey(d => d.DogId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TicketDetails_DogId");

            entity.HasOne(d => d.Race).WithMany(p => p.TicketDetails)
                .HasForeignKey(d => d.RaceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TicketDetails_RaceId");

            entity.HasOne(d => d.Ticket).WithMany(p => p.TicketDetails)
                .HasForeignKey(d => d.TicketId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TicketDetails_TicketId");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC07ED8C3971");

            entity.ToTable("User");

            entity.HasIndex(e => e.Guidid, "UQ__User__624B21E7C4476F26").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Guidid).HasColumnName("GUIDId");
            entity.Property(e => e.IpAddress)
                .IsRequired()
                .HasMaxLength(45);
            entity.Property(e => e.NickName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}